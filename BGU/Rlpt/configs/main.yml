
cost_sniffer:
  gui: false
  save_costs: false

gui:
  render_ee_icons: true
  render_trajectory_lines: true

episode_plots:
  show: true 

profile_memory:
  include: false # true means use this tool to profile https://pytorch.org/blog/understanding-gpu-memory-1/ 

agent:
  model: # The Neural network 
    load_checkpoint: false
    checkpoint_path: 'BGU/Rlpt/trained_models/2025:01:06(Mon)22:47:44/model.pth' # None
    dst_dir: 'BGU/Rlpt/trained_models'
    include_etl: true
    state_representation: # input layer 
      robot_dofs_positions: true
      robot_dofs_velocities: true
      goal_pose: false 
      coll_objs: false
      robot_base_pos: false
      prev_action_idx: false
      pi_mppi_means: true
      pi_mppi_covs: false # currently disabled since it doesent change

      
  train_suit:
    gamma: 0.999
    batch_size: 128
    eps_decay: true
    default_eps: 0.01
    grad_clipping: false
    N: 100000 # replay buffer size 

  reward:
    goal_pos_thresh_dist: 0.01 # activation radius. meters
    goal_rot_thresh_dist: 0.01 # meters
    col_thresh_dist: 0.05 # meters
    time_reward: linear # fixed # (linear or fixed)
    pose_reward: false # false means no direct reward on goal state, learning just from time to goal and collisions
    safety_w: 100
    pose_w: 10
    step_dur_w: 1
    terminal_collision: true
    terminal_goal: true




  training:
    run: true
    save_checkpoints: true
    n_episodes: 1200
    max_ts: 1200
    disable_frequent_h_changing: false
    sample_objs_every_episode: false
    sample_obj_locs_every_episode: false
    sample_goal_every_episode: false
    reset_to_initial_state_every_episode: false
    default_goal_pose: [-0.27, 0.3, 0.3, 0, 0.4, 0, 0.2] # in storm coordinates.  other options: [-0.37, -0.37, 0.3, 0, 2.5, 0, 1], #  behind robot: reachible from start pose at large H (i succeeded with 320), [-0.27, 0.3, 0.3, 0, 0.4, 0, 0.2], # right to robot: rechible from start pose [0.3, -0.47, 0.31, 0, 0, 0, 1], # left to robot: rotated upside down - reachible from start pose with no self/premitive collisions. Failing for no reason due to too high self collision weight (but no real self collision). 
  
  testing:
    run: false
    n_episodes: 100
    max_ts: 10
    disable_frequent_h_changing: false
    sample_objs_every_episode: false
    sample_obj_locs_every_episode: false
    sample_goal_every_episode: false
    reset_to_initial_state_every_episode: true
    default_goal_pose: [-0.27, 0.3, 0.3, 0, 0.4, 0, 0.2] # in storm coordinates.  other options: [-0.37, -0.37, 0.3, 0, 2.5, 0, 1], #  behind robot: reachible from start pose at large H (i succeeded with 320), [-0.27, 0.3, 0.3, 0, 0.4, 0, 0.2], # right to robot: rechible from start pose [0.3, -0.47, 0.31, 0, 0, 0, 1], # left to robot: rotated upside down - reachible from start pose with no self/premitive collisions. Failing for no reason due to too high self collision weight (but no real self collision).
    
    # load_model: true # if false, taking the trained model from the training phase
    # model: 'BGU/Rlpt/trained_models/2025:01:04(Sat)14:27:25/model.pth'

  action_space:
    use_original_storm_params: true



